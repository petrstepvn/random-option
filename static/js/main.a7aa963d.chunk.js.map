{"version":3,"sources":["components/List.js","App.js","index.js"],"names":["CheckboxList","payload","handleRemove","List","map","option","ListItem","key","id","role","undefined","ListItemText","primary","body","ListItemSecondaryAction","onClick","IconButton","edge","aria-label","color","App","useState","Text","setText","Options","setOptions","RandomOption","setRandomOption","Container","maxWidth","onSubmit","e","preventDefault","uuidv4","console","log","handleSubmit","FormControl","fullWidth","InputLabel","Input","value","onChange","target","handleChange","endAdornment","InputAdornment","position","index","indexOf","newOptions","splice","Button","variant","size","randomIndex","Math","floor","random","length","handleRandomOption","Typography","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAWe,SAASA,EAAT,GAAkD,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,aAC/C,OACC,kBAACC,EAAA,EAAD,KACEF,EAAQG,KAAI,SAACC,GAAD,OACZ,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOG,GAAIC,UAAMC,GAC/B,kBAACC,EAAA,EAAD,CAAcH,GAAIH,EAAOG,GAAII,QAASP,EAAOQ,OAC7C,kBAACC,EAAA,EAAD,CAAyBC,QAAS,kBAAMb,EAAaG,EAAOG,MAC3D,kBAACQ,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,YACjC,kBAAC,IAAD,CAAQC,MAAM,qB,6BC2DNC,EA9DH,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACVC,EADU,KACJC,EADI,OAEaF,mBAAS,IAFtB,mBAEVG,EAFU,KAEDC,EAFC,OAGuBJ,mBAAS,IAHhC,mBAGVK,EAHU,KAGIC,EAHJ,KA8BjB,OACC,kBAACC,EAAA,EAAD,CAAWC,SAAS,MACnB,0BAAMC,SAAU,SAACC,GAAD,OAvBG,SAACA,GACrBA,EAAEC,iBACGV,IACLG,EAAW,GAAD,mBAAKD,GAAL,CAAc,CAAEhB,GAAIyB,cAAUpB,KAAMS,MAC9CC,EAAQ,IACRW,QAAQC,IAAIX,IAkBYY,CAAaL,KACnC,kBAACM,EAAA,EAAD,CAAaC,WAAS,GACrB,kBAACC,EAAA,EAAD,qBACA,kBAACC,EAAA,EAAD,CACCC,MAAOnB,EACPoB,SAAU,SAACX,GAAD,OAhCM,SAACA,GACrBR,EAAQQ,EAAEY,OAAOF,OA+BIG,CAAab,IAC9Bc,aACC,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACxB,kBAAC/B,EAAA,EAAD,KACC,kBAAC,IAAD,YAON,kBAAC,EAAD,CAAMf,QAASuB,EAAStB,aA/BL,SAACM,GACrB,IAAMwC,EAAQxB,EAAQpB,KAAI,SAACC,GAAD,OAAYA,EAAOG,MAAIyC,QAAQzC,GACnD0C,EAAa1B,EAAQpB,KAAI,SAACC,GAAD,OAAYA,KAC3C6C,EAAWC,OAAOH,EAAO,GACzBvB,EAAWyB,MA4BV,kBAACE,EAAA,EAAD,CACCC,QAAQ,YACRlC,MAAM,UACNmC,KAAK,QACLvC,QAAS,SAACgB,GAAD,OA7Be,SAACA,GAC3BA,EAAEC,iBACF,IAAMuB,EAAcC,KAAKC,MAAMD,KAAKE,SAAWlC,EAAQmC,QACvDhC,EAAgBH,EAAQ+B,GAAa1C,MA0BnB+C,CAAmB7B,KAJpC,0BAQA,kBAAC8B,EAAA,EAAD,CAAYR,QAAQ,MAAM3B,KCrE7BoC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,W","file":"static/js/main.a7aa963d.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Delete from '@material-ui/icons/Delete';\n\nexport default function CheckboxList({ payload, handleRemove }) {\n\treturn (\n\t\t<List>\n\t\t\t{payload.map((option) => (\n\t\t\t\t<ListItem key={option.id} role={undefined}>\n\t\t\t\t\t<ListItemText id={option.id} primary={option.body} />\n\t\t\t\t\t<ListItemSecondaryAction onClick={() => handleRemove(option.id)}>\n\t\t\t\t\t\t<IconButton edge=\"end\" aria-label=\"comments\">\n\t\t\t\t\t\t\t<Delete color=\"secondary\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t</ListItem>\n\t\t\t))}\n\t\t</List>\n\t);\n}\n","import React, { useState } from 'react';\nimport {\n\tContainer,\n\tTextField,\n\tFormControl,\n\tInputLabel,\n\tInput,\n\tIconButton,\n\tInputAdornment,\n\tButton,\n\tTypography\n} from '@material-ui/core';\nimport List from './components/List';\nimport Add from '@material-ui/icons/Add';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst App = () => {\n\tconst [Text, setText] = useState('');\n\tconst [Options, setOptions] = useState([]);\n\tconst [RandomOption, setRandomOption] = useState('');\n\n\tconst handleChange = (e) => {\n\t\tsetText(e.target.value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (!Text) return;\n\t\tsetOptions([...Options, { id: uuidv4(), body: Text }]);\n\t\tsetText('');\n\t\tconsole.log(Options);\n\t};\n\n\tconst handleRemove = (id) => {\n\t\tconst index = Options.map((option) => option.id).indexOf(id);\n\t\tconst newOptions = Options.map((option) => option);\n\t\tnewOptions.splice(index, 1);\n\t\tsetOptions(newOptions);\n\t};\n\n\tconst handleRandomOption = (e) => {\n\t\te.preventDefault();\n\t\tconst randomIndex = Math.floor(Math.random() * Options.length);\n\t\tsetRandomOption(Options[randomIndex].body);\n\t};\n\n\treturn (\n\t\t<Container maxWidth=\"xs\">\n\t\t\t<form onSubmit={(e) => handleSubmit(e)}>\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<InputLabel>Add new item</InputLabel>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tvalue={Text}\n\t\t\t\t\t\tonChange={(e) => handleChange(e)}\n\t\t\t\t\t\tendAdornment={\n\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t\t\t<Add />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</FormControl>\n\t\t\t</form>\n\t\t\t<List payload={Options} handleRemove={handleRemove} />\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tonClick={(e) => handleRandomOption(e)}\n\t\t\t>\n\t\t\t\tGenerate random option\n\t\t\t</Button>\n\t\t\t<Typography variant=\"h2\">{RandomOption}</Typography>\n\t\t</Container>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}